@model ShoppingHub.BLL.ModelVm.GetAllProductsVM

@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/_NewLayout.cshtml";
}

<div class="container my-4" style="background-color: #f8f9ff; border-radius: 12px; padding: 20px;">
    <h2 class="mb-4 text-center" style="font-size: 2rem; color: #6f42c1; font-weight: bold;">
        Our Available Products
    </h2>

    <!-- Filters -->
    <form asp-action="GetAllProducts" method="get" class="row g-3 mb-4">
        <div class="col-md-3">
            <input type="text" asp-for="SearchTerm" class="form-control" placeholder="Search products..." />
        </div>

        <div class="col-md-3">
            <select asp-for="SelectedCategoryId" class="form-select"
                    asp-items="@(new SelectList(Model.Categories, "Id", "Name"))">
                <option value="">-- All Categories --</option>
            </select>
        </div>

        <div class="col-md-2">
            <input type="number" asp-for="MinPrice" class="form-control" placeholder="Min Price" />
        </div>

        <div class="col-md-2">
            <input type="number" asp-for="MaxPrice" class="form-control" placeholder="Max Price" />
        </div>

        <div class="col-md-2 d-grid">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-search"></i> Filter
            </button>
        </div>
    </form>

    <!-- Products -->
    <div class="row">
        @if (Model.Products != null && Model.Products.Any())
        {
            foreach (var item in Model.Products)
            {
                <div class="col-md-3 mb-4">
                    <div class="card shadow-sm h-100">
                        <img src="@Url.Content(item.ImagePath)" class="card-img-top" alt="@item.ProductName"
                             style="height:200px; object-fit:cover;" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-center text-secondary">@item.ProductName</h5>
                            <p class="card-text text-center fw-bold text-success">$@item.Price</p>

                            <!-- Action Buttons -->
                            <div class="d-flex justify-content-between mt-auto">
                                <!-- Edit -->
                                <a asp-action="Edit" asp-route-id="@item.ProductID"
                                   class="btn btn-warning btn-sm">
                                    <i class="bi bi-pencil"></i> Edit
                                </a>

                                <!-- Delete (opens modal) -->
                                <button type="button"
                                        class="btn btn-danger btn-sm delete-btn"
                                        data-product-id="@item.ProductID"
                                        data-product-name="@item.ProductName">
                                    <i class="bi bi-trash"></i> Delete
                                </button>
                            </div>

                            <!-- Add to Cart -->
                            <a href="#" class="btn btn-outline-primary btn-sm mt-2 w-100">
                                <i class="bi bi-cart"></i> Add to Cart
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-center text-muted">No products available.</p>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalItems > Model.PageSize)
    {
        var totalPages = (int)Math.Ceiling((double)Model.TotalItems / Model.PageSize);

        <nav>
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                        <a class="page-link"
                           asp-action="GetAllProducts"
                           asp-route-PageNumber="@i"
                           asp-route-SearchTerm="@Model.SearchTerm"
                           asp-route-SelectedCategoryId="@Model.SelectedCategoryId"
                           asp-route-MinPrice="@Model.MinPrice"
                           asp-route-MaxPrice="@Model.MaxPrice">
                            @i
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteConfirmLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete <strong id="productName"></strong>?
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="deleteProductId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const deleteButtons = document.querySelectorAll(".delete-btn");
            const modal = new bootstrap.Modal(document.getElementById("deleteConfirmModal"));
            const productNameSpan = document.getElementById("productName");
            const deleteProductIdInput = document.getElementById("deleteProductId");
            const deleteForm = document.getElementById("deleteForm");

            deleteButtons.forEach(button => {
                button.addEventListener("click", function () {
                    const productId = this.getAttribute("data-product-id");
                    const productName = this.getAttribute("data-product-name");

                    // Fill modal
                    productNameSpan.textContent = productName;
                    deleteProductIdInput.value = productId;

                    // Point form to correct controller action
                    deleteForm.action = "/Product/RemoveConfirmation";

                    modal.show();
                });
            });
        });
    </script>
}
