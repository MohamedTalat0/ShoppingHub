<script type="text/javascript">
        var gk_isXlsx = false;
        var gk_xlsxFileLookup = {};
        var gk_fileData = {};
        function filledCell(cell) {
          return cell !== '' && cell != null;
        }
        function loadFileData(filename) {
        if (gk_isXlsx && gk_xlsxFileLookup[filename]) {
            try {
                var workbook = XLSX.read(gk_fileData[filename], { type: 'base64' });
                var firstSheetName = workbook.SheetNames[0];
                var worksheet = workbook.Sheets[firstSheetName];

                // Convert sheet to JSON to filter blank rows
                var jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1, blankrows: false, defval: '' });
                // Filter out blank rows (rows where all cells are empty, null, or undefined)
                var filteredData = jsonData.filter(row => row.some(filledCell));

                // Heuristic to find the header row by ignoring rows with fewer filled cells than the next row
                var headerRowIndex = filteredData.findIndex((row, index) =>
                  row.filter(filledCell).length >= filteredData[index + 1]?.filter(filledCell).length
                );
                // Fallback
                if (headerRowIndex === -1 || headerRowIndex > 25) {
                  headerRowIndex = 0;
                }

                // Convert filtered JSON back to CSV
                var csv = XLSX.utils.aoa_to_sheet(filteredData.slice(headerRowIndex)); // Create a new sheet from filtered array of arrays
                csv = XLSX.utils.sheet_to_csv(csv, { header: 1 });
                return csv;
            } catch (e) {
                console.error(e);
                return "";
            }
        }
        return gk_fileData[filename] || "";
        }
        </script>@using ShoppingHub.BLL.ModelVm
@using ShoppingHub.BLL.ModelVm.order
@{
    Layout = "~/Views/Shared/_NewLayout.cshtml";
}
@inject IStringLocalizer<sharedResources> SharedLocalizer
@model List<OrderVM>

<style>
    .orders-container {
        background-color: #ffffff;
        padding: 2.5rem;
        border-radius: 1rem;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 1000px; /* أوسع قليلاً من الفورم لأن الجدول قد يحتوي على بيانات أكثر */
        margin: 2rem auto;
        font-family: 'Segoe UI', Arial, sans-serif;
    }

    .orders-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 0.9rem;
    }

    .orders-table th,
    .orders-table td {
        padding: 0.75rem;
        text-align: left;
        border-bottom: 1px solid #e2e8f0;
        word-break: break-word;
    }

    .orders-table th {
        font-weight: 600;
        color: #2d3748;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .orders-table td {
        color: #4a5568;
        max-width: 150px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .orders-table .items-cell {
        max-width: 250px; /* مساحة أكبر لعرض المنتجات */
    }

    .btn-cancel {
        background: linear-gradient(135deg, #e53e3e 0%, #c53030 100%);
        border: 2px solid transparent;
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
        font-weight: 600;
        border-radius: 0.5rem;
        color: #ffffff;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-cancel:hover {
        background: transparent;
        border: 2px solid #c53030;
        color: #c53030;
        box-shadow: 0 0 8px rgba(197, 48, 48, 0.3);
    }

    .btn-cancel:disabled {
        background: linear-gradient(135deg, #a0aec0 0%, #a0aec0 100%);
        border: 2px solid transparent;
        color: #ffffff;
        cursor: not-allowed;
    }

    .message-success {
        color: #15803d;
        font-size: 1rem;
        text-align: center;
        margin-bottom: 1.5rem;
    }

    .message-error {
        color: #e53e3e;
        font-size: 1rem;
        text-align: center;
        margin-bottom: 1.5rem;
    }

    .order-items {
        font-size: 0.85rem;
        color: #4a5568;
    }

    .order-items ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .order-items li {
        margin-bottom: 0.25rem;
    }

    media (max-width: 576px) {
        .orders-container {
            padding: 1.5rem;
            margin: 1rem;
        }

        .orders-table {
            font-size: 0.8rem;
        }

        .orders-table th,
        .orders-table td {
            padding: 0.5rem;
            max-width: 100px;
        }

        .orders-table .items-cell {
            max-width: 150px;
        }

        .btn-cancel {
            font-size: 0.8rem;
            padding: 0.4rem 0.8rem;
        }
    }
</style>

<div class="orders-container">
    @if (TempData["Message"] != null)
    {
        <p class="message-success">@TempData["Message"]</p>
    }
    @if (TempData["Error"] != null)
    {
        <p class="message-error">@TempData["Error"]</p>
    }

    <h2 style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; margin-bottom: 1.5rem;">
        @SharedLocalizer["MyOrders"]
    </h2>

    @if (Model?.Any() == true)
    {
        <table class="orders-table">
            <thead>
                <tr>
                    <th>@SharedLocalizer["OrderId"]</th>
                    <th>@SharedLocalizer["OrderDate"]</th>
                    <th>@SharedLocalizer["Address"]</th>
                    <th>@SharedLocalizer["PaymentMethod"]</th>
                    <th>@SharedLocalizer["Total"]</th>
                    <th>@SharedLocalizer["Status"]</th>
                    <th>@SharedLocalizer["Items"]</th>
                    <th>@SharedLocalizer["Action"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.OrderId</td>
                        <td>@order.OrderDate.ToString("dd/MM/yyyy")</td>
                        <td>@order.Address</td>
                        <td>@SharedLocalizer[order.PaymentMethod]</td>
                        <td>@order.TotalAmount.ToString("C", new System.Globalization.CultureInfo("ar-EG"))</td>
                        <td>@SharedLocalizer[order.Status]</td>
                        <td class="items-cell">
                            <div class="order-items">
                                <ul>
                                    @foreach (var item in order.Items)
                                    {
                                        <li>@(item.Product?.ProductName ?? "غير متوفر") - @item.Quantity × @(item.Product?.Price.ToString("C", new System.Globalization.CultureInfo("ar-EG")) ?? "غير متوفر")</li>
                                    }
                                </ul>
                            </div>
                        </td>
                        <td>
                            @if (order.Status == "Pending")
                            {
                                <form asp-action="CancelOrder" asp-controller="Order" method="post">
                                    <input type="hidden" name="orderId" value="@order.OrderId" />
                                    <button type="submit" class="btn-cancel">@SharedLocalizer["Cancel"]</button>
                                </form>
                            }
                            else
                            {
                                <button class="btn-cancel" disabled>@SharedLocalizer["Cancel"]</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p style="color: #e53e3e; text-align: center;">@SharedLocalizer["NoOrders"]</p>
    }
</div>